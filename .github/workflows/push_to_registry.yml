# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build-And-Push-to-GHCR-CI

on:
  push:
    branches:
      - master
env:
  REGISTRY: ghcr.io
  NAME_IMAGE: iprody/iprody-devs-gr0000000008-product-service
  JAR_FILE: product-service-app-0.0.1-SNAPSHOT-exec.jar

jobs:
  push_to_github_registry:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build project with Maven
        run: mvn -B clean install -Dmaven.test.skip=true -Dcheckstyle.skip -f pom.xml
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAME_IMAGE }}
          tags: latest
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./product-service-app/
          file: ./product-service-app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Save artifact
          path: |
            ./product-service-app/target
            !./product-service-app/target/**/*.md
